{# 分页器模板 #}
{% macro page(total, curr, count) %}
{% if total >= 2 %}
  {% set step = 3 %}
  <nav data-total="{{total}}" data-curr="{{curr}}" class="pagination-wrap">
    <ul style="vertical-align: middle" class="pagination">
      {# 添加上一页 #}
      {% if curr > 1 %}
      <li><a data-index="{{ curr - 1 }}" href="{{controller|url({_pn: curr-1},[])}}">«</a></li>
      {% endif %}

      {# 当前页之前 #}
      {% if (curr - step) > 2 %}
        <li><a data-index="1" href="{{controller|url({_pn: 1},[])}}">1</a></li>
        <li class='omission'><span>...</span></li>
        {% for index in range(curr-step, curr) %}
          <li><a data-index="{{ index }}" href="{{controller|url({_pn: index},[])}}">{{ index }}</a></li>
        {% endfor %}
      {% else %}
        {% for index in range(1, curr) %}
          <li><a data-index="{{ index }}" href="{{controller|url({_pn: index},[])}}">{{ index }}</a></li>
        {% endfor %}
      {% endif %}

      {# 当前页 #}
      <li class="active"><span data-index="{{ curr }}">{{curr}}</span></li>

      {# 当前页之后 #}
      {% if (total - curr - step) >= 2 %}
        {% for index in range((curr+1), (curr+step+1))%}
          <li><a data-index="{{ index }}" href="{{controller|url({_pn: index},[])}}">{{ index }}</a></li>
        {% endfor %}
        <li class='omission'><span>...</span></li>
        <li><a data-index="{{total}}" href="{{controller|url({_pn: total},[])}}">{{total}}</a></li>
      {% else %}
        {% for index in range((curr+1), total+1)%}
          <li><a data-index="{{ index }}" href="{{controller|url({_pn: index},[])}}">{{ index }}</a></li>
        {% endfor %}
      {% endif %}

      {# next #}
      {% if curr < total %}
        <li><a data-index="{{ curr + 1 }}" href="{{controller|url({_pn: curr+1},[])}}">»</a></li>
      {% endif %}

      <li class="go-input"><a><input type="text" placeholder="跳页"></a></li>
      <li><a class="js-pager-go">跳转</a></li>

    </ul>
    <span>共{{count}}条数据</span>
  </nav>
{% endif %}
{% endmacro %}

{{page(data.totalPages, data.currentPage, data.count)}}






Controller代码

async indexAction(){
  let model = this.model("tag");
  let page = this.get("_pn") || 1;
  let data = await model.page(page, 10).countSelect();

  this.assign('data', data);
  return this.display();
}

补充上面的url filter

env.addFilter("url", function(controller, params={}, expect=[]){
    for(let item in params) {
        expect.push(item);
    }
    //console.log(expect);

    var params_arr = [];

    for(let key in controller.get()) {
        if ( expect.indexOf(key) == -1) {
            params_arr.push(`${key}=${encodeURIComponent(controller.get(key))}`);
        }
    }

    for(let key1 in params) {
        params_arr.push(`${key1}=${encodeURIComponent(params[key1])}`);
    }

    //console.log("---------------------------------");
    var url_preix = controller.http.url.split("?");
    if (params_arr.length > 0) {
        return url_preix[0] + "?" + params_arr.join("&");
    }
    return controller.http.url;
});



